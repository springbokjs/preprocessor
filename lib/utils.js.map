{"version":3,"sources":["../src/utils.js"],"names":[],"mappings":";;;;;;;;;;;sBAA+B,QAAQ;;8BACT,gBAAgB;;;;;;;;;;;;;AASvC,SAAS,MAAM,CAAC,MAAc,EAAE,MAAc,EAAU;AAC3D,WAAO,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,UAAA,IAAI;eAAI,MAAM,GAAG,IAAI;KAAA,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;CACnE;;;;;AAEM,SAAS,cAAc,CAAC,MAAM,EAAE,QAAQ,EAAE;AAC7C,UAAM,SAAS,GAAG,4BAAoB,CAAC;AACvC,UAAM,CAAC,EAAE,CAAC,MAAM,EAAE,UAAC,IAAI;eAAK,QAAQ,CAAC,UAAC,IAAI;mBAAK,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC;SAAA,EAAE,IAAI,CAAC;KAAA,CAAC,CAAC;AAC7E,UAAM,CAAC,EAAE,CAAC,MAAM,EAAE;eAAM,SAAS,CAAC,GAAG,EAAE;KAAA,CAAC,CAAC;AACzC,WAAO,SAAS,CAAC;CACpB;;;;AAEM,SAAS,oBAAoB,CAAC,MAAM,EAAE;AACzC,WAAO,cAAc,CAAC,MAAM,EAAE,UAAC,KAAK,EAAE,MAAM,EAAK;AAC7C,6BAAmB,MAAM,CAAC,QAAQ,EAAE,6GAAE;;;;;;;;;;;;gBAA7B,MAAM;;AACX,iBAAK,CAAC,MAAM,CAAC,CAAC;SACjB;KACJ,CAAC,CAAC;CACN","file":"utils.js","sourcesContent":["import { WritableStream } from 'stream';\nimport { StringDecoder } from 'string_decoder';\n\n/**\n * Indents a multi-line string.\n *\n * @param {string} string Multi-line string to indent\n * @param {string} indent Indent to use\n * @return {string} Indented string\n */\nexport function indent(string: string, indent: string): string {\n    return string.split('\\n').map(line => indent + line).join('\\n');\n}\n\nexport function streamToStream(stream, callback) {\n    const newStream = new WritableStream();\n    stream.on('data', (data) => callback((data) => newStream.write(data), data));\n    stream.on('done', () => newStream.end());\n    return newStream;\n}\n\nexport function streamToLetterStream(stream) {\n    return streamToStream(stream, (write, buffer) => {\n        for (let letter of buffer.toString()) {\n            write(letter);\n        }\n    });\n}\n"]}